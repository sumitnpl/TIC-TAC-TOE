{"mappings":"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","sources":["app.js"],"sourcesContent":["let boxes = document.querySelectorAll(\".box\");\r\nlet resetBtn = document.querySelector(\"#reset-btn\");\r\nlet newGameBtn = document.querySelector(\"#new-btn\");\r\nlet msgContainer = document.querySelector(\".msg-container\");\r\nlet msg = document.querySelector(\"#msg\");\r\nlet toggle = document.querySelector(\"#togglebutton\")\r\nlet timezoner = document.querySelector(\"#timehere\")\r\nconst body = document.body;\r\nlet isBlack = true;\r\nlet head = document.querySelector(\"#headin\")\r\nlet turnO = true; //playerX, playerO\r\nlet count = 0; //To Track Draw\r\n\r\n\r\nconst d = new Date();\r\nvar hour = d.getHours();\r\n\r\n// Function to update the time\r\nupdateTime();\r\nsetInterval(updateTime, 1000);\r\nfunction updateTime() {\r\n  const d = new Date();\r\n  document.getElementById(\"timehere\").innerHTML = d.toLocaleTimeString();\r\n if (hour >= 18 || hour < 6){\r\n  // for dark\r\n  isBlack = true;\r\n  body.style.background = \"#333537\";\r\n  timezoner.style.color = \"#c0db6c\"\r\n  head.style.color = \"white\";\r\n  toggle.classList.add(\"fa\", \"fa-toggle-off\");\r\n  toggle.style.color = \"#C2CCCE\";\r\n  boxes.forEach(box => {\r\n   box.classList.add(\"toggle\")\r\n    })\r\n}else{\r\n  body.style.background = \"#c4c4c8\";\r\n    head.style.color = \"black\";\r\n    timezoner.style.color = \"#262726\"\r\n    isBlack = false;\r\n    toggle.classList.add(\"fa\", \"fa-toggle-on\");\r\n    toggle.style.color = \"#0096FF\";\r\n    boxes.forEach(box => {\r\n      box.classList.remove(\"toggle\")\r\n    });\r\n}\r\n}\r\n// toggle clicked code\r\ntoggle.addEventListener(\"click\", () => {\r\n  // for dark\r\n  if (!isBlack) {\r\n    isBlack = true;\r\n    hour = 20 ; \r\n    toggle.classList.remove(\"fa\", \"fa-toggle-on\");\r\n    toggle.classList.add(\"fa\", \"fa-toggle-off\");\r\n    toggle.style.color = \"#C2CCCE\";\r\n    body.style.background = \"#333537\";\r\n    head.style.color = \"white\";\r\n    boxes.forEach(box => {\r\n      box.classList.add(\"toggle\")\r\n    });\r\n  } else {\r\n    // for day\r\n    body.style.background = \"#c4c4c8\";\r\n    head.style.color = \"black\";\r\n    isBlack = false;\r\n    toggle.classList.remove(\"fa\", \"fa-toggle-off\");\r\n    toggle.classList.add(\"fa\", \"fa-toggle-on\");\r\n    toggle.style.color = \"#0096FF\";\r\n    hour = 8;\r\n    boxes.forEach(box => {\r\n      box.classList.remove(\"toggle\")\r\n    });\r\n  }\r\n},3000);\r\n\r\nconst winPatterns = [\r\n  [0, 1, 2],\r\n  [0, 3, 6],\r\n  [0, 4, 8],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [2, 4, 6],\r\n  [3, 4, 5],\r\n  [6, 7, 8],\r\n];\r\n\r\nboxes.forEach((box) => {\r\n  box.addEventListener(\"click\", () => {\r\n    if (box.innerText = \" \") { \r\n      if (turnO) {\r\n        box.innerText = \"O\";\r\n        box.style.color = \"green\";\r\n        turnO = false;\r\n      } else {\r\n        box.innerText = \"X\";\r\n        box.style.color = \"brown\";\r\n        turnO = true;\r\n      } \r\n      count++;\r\n    }\r\n    let isWinner = checkWinner();\r\n    if (count === 9 && !isWinner) {\r\n      gameDraw();\r\n    }\r\n  });\r\n});\r\n\r\nconst checkWinner = () => {\r\n  for (let pattern of winPatterns) {\r\n    //console.log(pattern[0],pattern[1], pattern[2]);   (print win pattern)\r\n     // console.log(boxes[pattern[0]].innerText ,boxes[pattern[1]].innerText, boxes[pattern[2]].innerText);\r\n      \r\n    let pos1Val = boxes[pattern[0]].innerText;\r\n    let pos2Val = boxes[pattern[1]].innerText;\r\n    let pos3Val = boxes[pattern[2]].innerText;\r\n\r\n    if (pos1Val != \"\" && pos2Val != \"\" && pos3Val != \"\") {\r\n      if (pos1Val === pos2Val && pos2Val === pos3Val) {\r\n        msg.innerText = `Congratulations, Winner is ${pos1Val}`;\r\n         msgContainer.classList.remove(\"hide\");\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst resetGame = () => {\r\n  turnO = true;\r\n  count = 0;\r\n  boxes.forEach((box)=>{\r\n    box.innerText = \"\";\r\n  });\r\n  msgContainer.classList.add(\"hide\");\r\n};\r\n\r\nconst gameDraw = () => {\r\n  msg.innerText = `Game was Draw.`;\r\n  msgContainer.classList.remove(\"hide\");\r\n};\r\n\r\nresetBtn.addEventListener(\"click\", resetGame);\r\nnewGameBtn.addEventListener(\"click\", resetGame);\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.7c0ccee6.js.map","sourceRoot":"/__parcel_source_root/"}